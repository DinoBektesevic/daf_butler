run: ingest
datastore:
  cls: lsst.daf.butler.datastores.posixDatastore.PosixDatastore
  root: ./butler_test_repository
  create: true
  storageClasses:
    StructuredDataDictYaml:
      pytype: dict
      formatter: lsst.daf.butler.formatters.yamlFormatter.YamlFormatter
    StructuredDataListYaml:
      pytype: list
      formatter: lsst.daf.butler.formatters.yamlFormatter.YamlFormatter
    StructuredDataDictJson:
      pytype: dict
      formatter: lsst.daf.butler.formatters.jsonFormatter.JsonFormatter
    StructuredDataListJson:
      pytype: list
      formatter: lsst.daf.butler.formatters.jsonFormatter.JsonFormatter
    StructuredDataDictPickle:
      pytype: dict
      formatter: lsst.daf.butler.formatters.pickleFormatter.PickleFormatter
    StructuredDataListPickle:
      pytype: list
      formatter: lsst.daf.butler.formatters.pickleFormatter.PickleFormatter
    StructuredData: &StructuredData
      # Data from a simple Python class
      pytype: examplePythonTypes.MetricsExample
      assembler: lsst.daf.butler.core.composites.CompositeAssemblerMonolithic
      # Use YAML formatter by default
      formatter: lsst.daf.butler.formatters.yamlFormatter.YamlFormatter
      components:
        # Components are those supported by get. We use the default formatter
        # though, and not the formatters associated with the components.
        summary: StructuredDataDictYaml
        output: StructuredDataDictYaml
        # Deliberately set this to the wrong type
        data: StructuredDataDictYaml
    StructuredDataJson:
      <<: *StructuredData
      formatter: lsst.daf.butler.formatters.jsonFormatter.JsonFormatter
    StructuredDataPickle:
      <<: *StructuredData
      formatter: lsst.daf.butler.formatters.pickleFormatter.PickleFormatter
    StructuredComposite: &StructuredComposite
      pytype: examplePythonTypes.MetricsExample
      assembler: lsst.daf.butler.core.composites.CompositeAssembler
      components:
        summary: StructuredDataDictYaml
        output: StructuredDataDictYaml
        data: StructuredDataListYaml
    StructuredCompositeTestA:
      <<: *StructuredComposite
      components:
        summary: StructuredDataDictJson
        output: StructuredDataDictJson
        data: StructuredDataListJson
    StructuredCompositeTestB:
      <<: *StructuredComposite
      components:
        summary: StructuredDataDictPickle
        output: StructuredDataDictJson
        data: StructuredDataListYaml
    TablePersistable:
      pytype: lsst.afw.table.io.persistable.Persistable
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    TablePersistableWcs:
      pytype: lsst.afw.image.wcs.wcs.Wcs
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    TablePersistablePsf:
      pytype: lsst.afw.detection.Psf
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    TablePersistableCoaddInputs:
      pytype: lsst.afw.image.coaddInputs.CoaddInputs
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    TablePersistableVisitInfo:
      pytype: lsst.afw.image.visitInfo.VisitInfo
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    TablePersistableApCorr:
      pytype: lsst.afw.image.apCorrMap.ApCorrMap
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    TablePersistableCalib:
      pytype: lsst.afw.image.calib.Calib
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    ImageF:
      pytype: lsst.afw.image.image.ImageF
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    MaskX:
      pytype: lsst.afw.image.mask.MaskX
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    Catalog:
      pytype: lsst.afw.table.BaseCatalog
    SourceCatalog:
      pytype: lsst.afw.table.SourceCatalog
      formatter: lsst.daf.butler.formatters.fitsCatalogFormatter.FitsCatalogFormatter
    Exposure: &Exposure
      pytype: lsst.afw.image.Exposure
      formatter: lsst.daf.butler.formatters.fitsExposureFormatter.FitsExposureFormatter
      assembler: lsst.daf.butler.assemblers.exposureAssembler.ExposureAssemblerMonolithic
      components:
        image: ImageF
        mask: MaskX
        variance: ImageF
        wcs: TablePersistableWcs
        psf: TablePersistablePsf
        calib: TablePersistableCalib
        visitInfo: TablePersistableVisitInfo
        apCorrMap: TablePersistableApCorr
        coaddInputs: TablePersistableCoaddInputs
    ExposureF:
      <<: *Exposure
      pytype: lsst.afw.image.ExposureF
    ExposureI:
      <<: *Exposure
      pytype: lsst.afw.image.ExposureI
    ExposureComposite: &ExposureComposite
      <<: *Exposure
      assembler: lsst.daf.butler.assemblers.exposureAssembler.ExposureAssembler
    ExposureCompositeF:
      <<: *ExposureComposite
      pytype: lsst.afw.image.ExposureF
    ExposureI:
      <<: *ExposureComposite
      pytype: lsst.afw.image.ExposureI
registry:
  cls: lsst.daf.butler.registries.sqlRegistry.SqlRegistry
  dbname: 'sqlite:///:memory:'
  id: 0
